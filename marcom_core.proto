syntax = "proto3";

package MarcomService;

option go_package = "./proto";

service MarcomService {
    rpc StartSimulation (SimulationRequest) returns (SimulationResponse);
    rpc PauseSimulation (PauseRequest) returns (PauseResponse);
    rpc StreamSimulationUpdates (StreamRequest) returns (stream SimulationUpdate);
    rpc ResearchProductCompetitor (Product) returns (ProductCompetitorResponse);
}

message AgentAttribute {
    string key = 1;
    string value = 2;
}

message Agent {
    int32 id = 1;
    string name = 2;
    string desc = 3;
    repeated AgentAttribute attrs = 4;
}

message Product {
    int32 id = 1;
    string name = 2;
    string desc = 3;
    float price = 4;
    float cost = 5;
}

message ProductCompetitorResponse {
    string query = 1;
    string report = 2;
}

message SimulationRequest {
    int32 id = 1;
    string env_desc = 2;
    repeated Agent agents = 3;
    repeated Product products = 4;
    int32 total_cycles = 5;
}

message SimulationResponse {
    string message = 1;
}

message PauseRequest {
    int32 simulation_id = 1;
}

message PauseResponse {
    string message = 1;
}

message StreamRequest {
    int32 simulation_id = 1;
}

message SimulationUpdate {
    int32 agent_id = 1;
    string action = 2;
    string content = 3; // see db.py in MarCom-SimulationCore line 35
    int32 cycle = 4; // which cycle is that (if is new cycle then need insert)
    int32 simulation_id = 5; // to associate the cycle with the simulation
}
